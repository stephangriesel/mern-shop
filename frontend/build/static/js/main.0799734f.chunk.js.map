{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/Hero.js","components/Meta.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/ProductListScreen.js","screens/UserEditScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_CLEAR_ITEMS","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","user","userRegister","userDetails","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","document","location","href","isAdmin","Footer","Row","Col","Rating","text","color","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","style","width","height","margin","display","Paginate","Pagination","Array","keys","active","dotenv","process","CONTENTFUL_TOKEN","CONTENTFUL_SPACE","console","log","Hero","setData","useEffect","window","fetch","method","body","stringify","query","then","json","person","Meta","description","keywords","Helmet","content","listProducts","pageNumber","listProductDetails","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","setComment","successProductReview","alert","Image","alt","fluid","mmd","ListGroup","countInStock","disabled","addToCart","setItem","CartScreen","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","lenth","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","post","login","Group","controlId","Label","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","createdAt","substring","totalPrice","isPaid","paidAt","styles","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","appendChild","paypal","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","labek","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.0799734f.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport {\n    productListReducer,\n    productDetailsReducer,\n    productDeleteReducer,\n    productCreateReducer,\n    productUpdateReducer,\n    productReviewCreateReducer,\n    productTopRatedReducer\n} from './reducers/productReducers'\n\nimport { cartReducer } from './reducers/cartReducers'\n\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer\n} from './reducers/userReducers'\n\nimport {\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer,\n    orderListMyReducer,\n    orderListReducer,\n    orderDeliverReducer\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productReviewCreate: productReviewCreateReducer,\n    productTopRated: productTopRatedReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderDeliver: orderDeliverReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage\n    },\n\n    userLogin: {\n        userInfo: userInfoFromStorage\n    }\n}\n\nconst middleware = [thunk]\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL\n\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] }\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                pages: action.payload.pages,\n                page: action.payload.page\n            }\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n\n    }\n}\n\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state }\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload }\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n\n    }\n}\n\nexport const productDeleteReducer = (\n    state = {},\n    action\n) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true }\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true }\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n\n    }\n}\n\nexport const productCreateReducer = (\n    state = {},\n    action\n) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true }\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n        case PRODUCT_CREATE_RESET:\n            return {}\n        default:\n            return state\n\n    }\n}\n\nexport const productUpdateReducer = (\n    state = { product: {} },\n    action\n) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true }\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        case PRODUCT_UPDATE_RESET:\n            return { product: {} }\n        default:\n            return state\n\n    }\n}\n\nexport const productReviewCreateReducer = (\n    state = {},\n    action\n) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return { loading: true }\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return { loading: false, success: true }\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return { loading: false, error: action.payload }\n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {}\n        default:\n            return state\n\n    }\n}\nexport const productTopRatedReducer = (\n    state = { products: [] },\n    action\n) => {\n    switch (action.type) {\n        case PRODUCT_TOP_REQUEST:\n            return { loading: true, products: [] }\n        case PRODUCT_TOP_SUCCESS:\n            return { loading: false, products: action.payload }\n        case PRODUCT_TOP_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n\n    }\n}","import {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD,\n    CART_CLEAR_ITEMS\n} from '../constants/cartConstants'\n\n\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n\n            const existItem = state.cartItems.find((x) => x.product === item.product)\n\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map((x) => x.product === existItem.product ? item : x)\n                }\n\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x => x.product !== action.payload),\n            }\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload,\n            }\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload,\n            }\n        case CART_CLEAR_ITEMS:\n            return {\n                ...state,\n                cartItems: [],\n            }\n        default:\n            return state\n    }\n}","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_RESET,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LOGOUT:\n            return { user: [] }\n        default:\n            return state\n\n    }\n}\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n\n    }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_DETAILS_RESET:\n            return { user: {} }\n        default:\n            return state\n\n    }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_UPDATE_PROFILE_RESET:\n            return {}\n        default:\n            return state\n\n    }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true }\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LIST_RESET:\n            return { users: [] }\n        default:\n            return state\n\n    }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true }\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n\n    }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_UPDATE_RESET:\n            return { user: {} }\n        default:\n            return state\n\n    }\n}","import {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_CREATE_RESET,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET\n} from '../constants/orderConstants'\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case ORDER_CREATE_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const orderDetailsReducer = (\n    state = {\n        loading: true,\n        orderItems: [],\n        shippingAddress: {}\n    },\n    action\n) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport const orderPayReducer = (\n    state = {\n\n    },\n    action\n) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case ORDER_PAY_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const orderDeliverReducer = (\n    state = {\n\n    },\n    action\n) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n        case ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case ORDER_DELIVER_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case ORDER_LIST_MY_RESET:\n            return { orders: [] }\n        default:\n            return state\n    }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst SearchBox = ({ history }) => {\n    const [keyword, setKeyword] = useState('')\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (keyword.trim()) {\n            history.push(`/search/${keyword}`)\n        } else {\n            history.push('/')\n        }\n    }\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Form.Control type='text' name='q' onChange={(e) => setKeyword(e.target.value)} placeholder='Search Products' className=\"mr-sm-2 ml-sm-5\"></Form.Control>\n            <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">Search</Button>\n        </Form>\n    )\n}\n\nexport default SearchBox\n","import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_FAIL,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_DETAILS_RESET,\n    USER_LIST_RESET,\n    USER_DELETE_FAIL,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_REQUEST,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL\n} from \"../constants/userConstants\"\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    localStorage.removeItem('cartItems')\n    localStorage.removeItem('shippingAddress')\n    localStorage.removeItem('paymentMethod')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n    document.location.href = '/login'\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/users/${id}`, config)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/users/profile`, user, config)\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/users`, config)\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        await axios.delete(`/api/users/${id}`, config)\n\n        dispatch({\n            type: USER_DELETE_SUCCESS\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS\n        })\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}","import React from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\n\nconst Header = () => {\n\n    const dispatch = useDispatch()\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const logoutHandler = () => {\n        dispatch(logout())\n        dispatch({ type: USER_DETAILS_RESET })\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand>MERN Shop</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Route render={({ history }) => <SearchBox history={history} />} />\n                        <Nav className=\"ml-auto\">\n                            <LinkContainer to=\"/cart\">\n                                <Nav.Link>\n                                    <i className=\"fas fa-shopping-cart\"></i> Cart\n                            </Nav.Link>\n                            </LinkContainer>\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='userName'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                                </NavDropdown>\n                            ) : (\n                                    <LinkContainer to=\"/login\">\n                                        <Nav.Link >\n                                            <i className=\"fas fa-user\"></i> Log In\n                                        </Nav.Link>\n                                    </LinkContainer>\n                                )}\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenu'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                                    </LinkContainer>\n                                </NavDropdown>\n                            )}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n    return (\n\n        <footer>\n            <Container>\n                <Row>\n                    <Col className='text-center py-3'>\n                        Copyright &copy; Testshop\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\n\nconst Rating = ({ value, text, color }) => {\n    return (\n        <div className=\"rating\" >\n            {/* <span>\n                <i style={{ color: color }} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{ color: color }} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{ color: color }} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{ color: color }} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{ color: color }} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>{text && text}</span> */}\n        </div>\n    )\n}\n\nRating.defaultProps = {\n    color: '#FFD700'\n}\n\nRating.propTypes = {\n    // value: PropTypes.number.isRequired,\n    // text: PropTypes.string.isRequired,\n    color: PropTypes.string,\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\n\nconst Product = ({ product }) => {\n    return (\n        <Card className=\"my-3 p-3 rounded\">\n            <Link to={`/product/${product._id}`}>\n                <Card.Img src={product.image} variant=\"top\" />\n            </Link>\n            <Card.Body>\n                <Link to={`/product/${product._id}`}>\n                    <Card.Title as=\"div\"><strong>{product.name}</strong></Card.Title>\n                </Link>\n            </Card.Body>\n\n            <Card.Text as=\"div\">\n                <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n            </Card.Text>\n\n            <Card.Text as=\"h3\">\n                €{product.price}\n            </Card.Text>\n        </Card>\n    )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n    return (\n        <Alert variant={variant}>\n            {children}\n\n        </Alert>\n    )\n}\n\nMessage.defaultProps = {\n    variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n        <Spinner animation='grow' role='status' style={{ width: '100px', height: '100px', margin: 'auto', display: 'block' }}>\n            <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({\n    pages,\n    page,\n    isAdmin = false,\n    keyword = ''\n}) => {\n    return pages > 1 && (\n        <Pagination>\n            {[...Array(pages).keys()].map(x => (\n                <LinkContainer\n                    key={x + 1}\n                    to={!isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}` : `/admin/productlist/${x + 1}`}>\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n                </LinkContainer>\n            ))}\n        </Pagination>\n    )\n}\n\nexport default Paginate\n","import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nimport dotenv from 'dotenv'\ndotenv.config();\n\nconst query = `\nquery {\n  person(id: \"7rO4f5TlocqD2yl5QH8QzO\") {\n    name\n  }\n}\n`\n\nconst { CONTENTFUL_TOKEN, CONTENTFUL_SPACE } = process.env;\nconsole.log(CONTENTFUL_SPACE)\nconsole.log(CONTENTFUL_TOKEN)\n\nconst Hero = () => {\n  let [data, setData] = useState(null)\n\n  useEffect(() => {\n    window.fetch(`https://graphql.contentful.com/content/v1/spaces/${CONTENTFUL_SPACE}`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${CONTENTFUL_TOKEN}`\n      },\n      body: JSON.stringify({ query }),\n    }).then((response) => response.json())\n      .then(json => setData(json.data))\n  }, [])\n\n  if (!data) return <span>Loading..</span>\n\n\n  return (\n\n    <span>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>\n            {data.person.name}\n          </Col>\n        </Row>\n      </Container>\n    </span>\n  )\n}\n\nexport default Hero","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\n\nconst Meta = ({ title, description, keywords }) => {\n    return (\n        <Helmet>\n            <title>{title}</title>\n            <meta name=\"description\" content={description} />\n            <meta name=\"description\" content={keywords} />\n        </Helmet>\n    )\n}\n\nMeta.defaultProps = {\n    title: 'Welcome to Mern Shop',\n    description: 'One stop shop',\n    keywords: 'electronics, cellphone, playstation'\n}\n\nexport default Meta\n","import axios from 'axios'\n\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL\n} from '../constants/productConstants'\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        await axios.delete(`/api/products/${id}`, config)\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(`/api/products`, {}, config)\n\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config)\n\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n        const { data } = await axios.get(`/api/products/top`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\n// import ProductCarousel from '../components/ProductCarousel'\nimport Hero from '../components/Hero'\nimport Meta from '../components/Meta'\nimport { listProducts } from '../actions/productActions'\n\nconst HomeScreen = ({ match }) => {\n    const keyword = match.params.keyword\n    const pageNumber = match.params.pageNumber || 1\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, page, pages } = productList\n    useEffect(() => {\n        dispatch(listProducts(keyword, pageNumber))\n    }, [dispatch, keyword, pageNumber])\n\n    return (\n        <>\n            {!keyword ? <Hero /> : <Link to='/' className='btn btn-light'>Back</Link>}\n            <h1>Latest Products</h1>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                        <>\n                            <Meta />\n                            <Row>\n                                {products.map(product => (\n                                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                        <Product product={product} />\n                                    </Col>\n                                ))}\n                            </Row>\n                            <Paginate\n                                pages={pages}\n                                page={page}\n                                keyword={keyword ? keyword : ''} />\n                        </>\n                    )}\n\n        </>\n    )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Meta from '../components/Meta';\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const { success: successProductReview, error: errorProductReview } = productReviewCreate\n\n    useEffect(() => {\n        if (successProductReview) {\n            alert('Review Submitted')\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n        dispatch(listProductDetails(match.params.id))\n    }, [dispatch, match, successProductReview])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(match.params.id, rating, comment))\n    }\n\n\n    return (\n        <>\n\n            <Link className=\"btn btn-light my-3\" to=\"/\">Back</Link>\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                <>\n                    <Meta title={product.name} />\n                    <Row>\n                        <Col md={6}>\n                            <Image src={product.image} alt={product.name} fluid />\n                        </Col>\n                        <Col mmd={3}>\n                            <ListGroup variant=\"flash\">\n                                <ListGroup.Item>\n                                    <h4>{product.name}</h4>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    {/* <Rating value={product.rating} text={`${product.numReviews} Reviews`}></Rating> */}\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    Price: €{product.price}\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    Description: {product.description}\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                        <Col md={3}>\n                            <Card>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Price:</Col>\n                                            <Col><strong>€{product.price}</strong></Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Status:</Col>\n                                            <Col>{product.countInStock > 0 ? 'In Stock' : 'N/A'}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                    {product.countInStock > 0 && (\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>QTY</Col>\n                                                <Col>\n                                                    <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\n                                                        {[...Array(product.countInStock).keys()].map((x) => (\n                                                            <option key={x + 1} value={x + 1}>{x + 1}</option>\n                                                        ))}\n                                                    </Form.Control>\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    )}\n                                    <ListGroup.Item>\n                                        <Button\n                                            onClick={addToCartHandler}\n                                            className=\"btn-dark\"\n                                            type=\"button\"\n                                            disabled={product.countInStock === 0}>\n                                            Add\n                                            </Button>\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Card>\n                        </Col>\n                    </Row>\n                    {/* <Row>\n                        <Col md={6}>\n                            <h2>Reviews</h2>\n                            {product.reviews.length === 0 && <Message>No Reviews</Message>}\n                            <ListGroup variant=\"flush\">\n                                {product.reviews.map(review => (\n                                    <ListGroup.Item key={review._id}>\n                                        <strong>{review.name}</strong>\n                                        <Rating value={review.rating} />\n                                        <p>{review.createdAt.substring(0, 10)}</p>\n                                        <p>{review.comment}</p>\n                                    </ListGroup.Item>\n                                ))}\n                                <ListGroup.Item>\n                                    <h2>Write a review</h2>\n                                    {errorProductReview && <Message variant=\"danger\">{errorProductReview}</Message>}\n                                    {userInfo ? (\n                                        <Form onSubmit={submitHandler}>\n                                            <Form.Group controlId='rating'>\n                                                <Form.Label>\n                                                    Rating\n                                                </Form.Label>\n                                                <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\n                                                    <option value=\"\">Select</option>\n                                                    <option value=\"1\">1 - Poor</option>\n                                                    <option value=\"2\">2 - Fair</option>\n                                                    <option value=\"3\">3 - Good</option>\n                                                    <option value=\"4\">4 - Very Good</option>\n                                                    <option value=\"6\">5 - Excellent</option>\n                                                </Form.Control>\n                                            </Form.Group>\n                                            <Form.Group controlId='comment'>\n                                                <Form.Label>\n                                                    Comment\n                                                </Form.Label>\n                                                <Form.Control\n                                                    as=\"textarea\"\n                                                    row=\"2\"\n                                                    value={comment}\n                                                    onChange={(e) => setComment(e.target.value)}\n                                                >\n                                                </Form.Control>\n                                            </Form.Group>\n                                            <Button type=\"submit\" variant=\"primary\">Submit</Button>\n                                        </Form>\n                                    ) : <Message>Please <Link to='/login'>log in</Link> to write a review {' '}</Message>}\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                    </Row> */}\n                </>\n            )}\n\n        </>\n    )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD\n}\n    from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty,\n        },\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data\n    })\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nconst CartScreen = ({ match, location, history }) => {\n    const productId = match.params.id\n\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart);\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ?\n                    <Message>Cart is empty. <Link to=\"/\">Back</Link></Message> : (\n                        <ListGroup variant=\"flush\">\n                            {cartItems.map(item => (\n                                <ListGroup.Item key={item.product}>\n                                    <Row>\n                                        <Col md={2}>\n                                            <Image src={item.image} alt={item.name} fluid rounded />\n                                        </Col>\n                                        <Col md={3}>\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </Col>\n                                        <Col md={2}>\n                                            €{item.price}\n                                        </Col>\n                                        <Col md={2}>\n                                            <Form.Control as='select' value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\n                                                {[...Array(item.countInStock).keys()].map((x) => (\n                                                    <option key={x + 1} value={x + 1}>{x + 1}</option>\n                                                ))}\n                                            </Form.Control>\n                                        </Col>\n                                        <Col md={2}>\n                                            <Button type='button' variant='dark' onClick={() => removeFromCartHandler(item.product)}>\n                                                <i className=\"fas fa-trash\"></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    )}\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Subtotal: ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items </h2>\n                            €{cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Button type=\"button\" className=\"btn-block\" disabled={cartItems.lenth === 0} onClick={checkoutHandler}>Checkout</Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, error, userInfo } = userLogin\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant=\"danger\">{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"yourname@domain.com\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"######\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type=\"submit\" variant=\"primary\">\n                    SIgn In\n                </Button>\n            </Form>\n\n            <Row className=\"py-3\">\n                <Col>\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                        Register\n                    </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { loading, error, userInfo } = userRegister\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Password not matching!')\n        } else {\n            dispatch(register(name, email, password))\n        }\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign Up</h1>\n            {message && <Message variant=\"danger\">{message}</Message>}\n            {error && <Message variant=\"danger\">{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId=\"name\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        type=\"name\"\n                        placeholder=\"Your Name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"yourname@domain.com\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"######\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"confirmPassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Confirm ######\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Button type=\"submit\" variant=\"primary\">\n                    Register\n                </Button>\n            </Form>\n\n            <Row className=\"py-3\">\n                <Col>\n                    Have account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Login\n                    </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nconst ProfileScreen = ({ location, history }) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector((state) => state.userDetails)\n    const { loading, error, user } = userDetails\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector((state) => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success) { // remove user.name when testing in postman\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Password not matching!')\n        } else {\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\n        }\n    }\n\n    return <Row>\n        <Col md={3}>\n            <h2>Profile</h2>\n            {message && <Message variant=\"danger\">{message}</Message>}\n            {error && <Message variant=\"danger\">{error}</Message>}\n            {success && <Message variant=\"success\">Profile update!</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId=\"name\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        type=\"name\"\n                        placeholder=\"Your Name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"yourname@domain.com\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"######\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"confirmPassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Confirm ######\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Button type=\"submit\" variant=\"primary\">\n                    Update\n                </Button>\n            </Form>\n        </Col>\n        <Col md={9}>\n            <h2>Orders</h2>\n            {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>DATE</th>\n                            <th>TOTAL</th>\n                            <th>PAID</th>\n                            <th>DELIVERED</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders.map(order => (\n                            <tr key={order._id}>\n                                <td>{order._id}</td>\n                                <td>{order.createdAt.substring(0, 10)}</td>\n                                <td>{order.totalPrice}</td>\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                    <i className=\"fas fa-times\" styles={{ color: 'red' }}></i>\n                                )}</td>\n                                <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (\n                                    <i className=\"fas fa-times\" styles={{ color: 'red' }}></i>\n                                )}</td>\n                                <td>\n                                    <LinkContainer to={`/order/${order._id}`}>\n                                        <Button className=\"btn-sm\" variant=\"light\">Details</Button>\n                                    </LinkContainer>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            )}\n        </Col>\n    </Row>\n}\n\nexport default ProfileScreen\n","import axios from 'axios'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL\n} from '../constants/orderConstants'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(`/api/orders`, order, config)\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data,\n        })\n        localStorage.removeItem('cartItems')\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/orders/${id}`, config)\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\n/*\nPayment Gateways Note:\nPaypal: paymentResult\n*/\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/orders/myorders`, config)\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/orders`, config)\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n    return (\n        <Nav className='justify-content-center mb-4'>\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Sign In</Nav.Link>\n                    </LinkContainer>\n                ) : (<Nav.Link disabled>Sign In</Nav.Link>\n                    )}\n            </Nav.Item>\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : (<Nav.Link disabled>Shipping</Nav.Link>\n                    )}\n            </Nav.Item>\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : (<Nav.Link disabled>Payment</Nav.Link>\n                    )}\n            </Nav.Item>\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ) : (<Nav.Link disabled>Place Order</Nav.Link>\n                    )}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"address\">\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Your address\"\n                        value={address}\n                        required\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"city\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Your city\"\n                        value={city}\n                        required\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"postalcode\">\n                    <Form.Label>Postalcode</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter your postalcode\"\n                        value={postalCode}\n                        required\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"country\">\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter your country\"\n                        value={country}\n                        required\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type=\"submit\" variant=\"primary\">\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    if (!shippingAddress) {\n        history.push('/shipping')\n    }\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n            <h1>Payment Method</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n\n                    <Col>\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"PayPal or Credit Card\"\n                            id=\"Paypal\"\n                            name=\"paymentMethod\"\n                            value=\"PayPal\"\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check>\n                    </Col>\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\">\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\n\nconst PlaceOrderScreen = ({ history }) => {\n    const dispatch = useDispatch()\n    const cart = useSelector(state => state.cart)\n\n    // Calculate Prices\n\n    const addDecimals = (num) => {\n        return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n    cart.taxPrice = addDecimals(Number((0.21 * cart.itemsPrice).toFixed(2)))\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, success, error } = orderCreate\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: USER_DETAILS_RESET })\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n        // eslint-disable-next-line\n    }, [history, success])\n\n    const placeOrderHandler = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice\n        }))\n    }\n    return (\n        <>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Address: </strong>\n                                {cart.shippingAddress.address},{' '}{cart.shippingAddress.city}, {''}\n                                {cart.shippingAddress.postalCode}, {' '}{cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <strong>Method: </strong>\n                            {cart.paymentMethod}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Items Ordered</h2>\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message>\n                                : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>\n                                                            {item.name}\n                                                        </Link>\n                                                    </Col>\n                                                    <Col md={4}>\n                                                        {item.qty} x €{item.price} = €{item.qty * item.price}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>€{cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>€{cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>€{cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>€{cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                <Button type=\"button\" className=\"btn-block\" disabled={cart.cartItems === 0} onClick={placeOrderHandler}>Place Order</Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) => {\n    const orderId = match.params.id\n\n    const [sdkReady, setSdkReady] = useState(false)\n    const dispatch = useDispatch()\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, loading, error } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    if (!loading) {\n        // Calculate Prices\n        const addDecimals = (num) => {\n            return (Math.round(num * 100) / 100).toFixed(2)\n        }\n\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0))\n    }\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        }\n        const addPayPalScript = async () => {\n            const { data: clientId } = await axios.get('/api/config/paypal')\n            console.log('Client ID test: ', clientId);\n            const script = document.createElement('script')\n            script.type = 'text/javascript'\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n            script.async = true\n            script.onload = () => {\n                setSdkReady(true)\n            }\n            document.body.appendChild(script)\n        }\n\n        if (!order || successPay || successDeliver || order._id !== orderId) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n\n        // addPayPalScript()\n\n    }, [dispatch, orderId, successPay, successDeliver, order])\n\n    // paymentResult from PayPal\n    const successPaymentHandler = (paymentResult) => {\n        console.log('Check paymentResult from Paypal:', paymentResult)\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> :\n        <>\n            <h1>Order: {order._id}</h1>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p><strong>Name: </strong>{order.user.name}</p>\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                            <p>\n                                <strong>Address: </strong>\n                                {order.shippingAddress.address},{' '}{order.shippingAddress.city}, {''}\n                                {order.shippingAddress.postalCode}, {' '}{order.shippingAddress.country}\n                            </p>\n                            {order.isDelivered ? <Message variant='success'>Delivered on {order.deliveredAt}</Message> : <Message variant=\"danger\">Not Delivered</Message>}\n\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {order.paymentMethod}\n                            </p>\n                            {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> : <Message variant=\"danger\">Not paid</Message>}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Items Ordered</h2>\n                            {order.orderItems.length === 0 ? <Message>No order here</Message>\n                                : (\n                                    <ListGroup variant='flush'>\n                                        {order.orderItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>\n                                                            {item.name}\n                                                        </Link>\n                                                    </Col>\n                                                    <Col md={4}>\n                                                        {item.qty} x €{item.price} = €{item.qty * item.price}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>€{order.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>€{order.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>€{order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>€{order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            {!order.isPaid && (\n                                <ListGroup.Item>\n                                    {loadingPay && <Loader />}\n                                    {!sdkReady ? <Loader /> : (\n                                        <PayPalButton\n                                            amount={order.totalPrice}\n                                            onSuccess={successPaymentHandler}\n                                        />\n                                    )}\n                                </ListGroup.Item>\n                            )}\n                            {\n                                loadingDeliver && <Loader />\n                            }\n                            {\n                                userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button type='button' className='btn btn-block' onClick={deliverHandler}>\n                                            Mark as delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )\n                            }\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n}\n\nexport default OrderScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = ({ history }) => {\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n    }, [dispatch, history, successDelete, userInfo])\n\n    const deleteHandler = (id) => {\n        if (window.confirm(`Please confirm if you want to delete ${id}`))\n            dispatch(deleteUser(id))\n    }\n    return (\n        <>\n            <h1>Users</h1>\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">\n                {error}\n            </Message> : (\n                    <Table striped bordered hover responsive className=\"table-sm\">\n                        <thead>\n                            <tr>\n                                <td>ID</td>\n                                <td>NAME</td>\n                                <td>EMAIL</td>\n                                <td>ADMIN</td>\n                                <td></td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {users.map(user => (\n                                <tr key={user._id}>\n                                    <td>{user._id}</td>\n                                    <td>{user.name}</td>\n                                    <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\n                                    <td>\n                                        {user.isAdmin ? (<i className='fas fa-check' style={{ color: 'green' }}></i>) : (\n                                            <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                                        )}\n                                    </td>\n                                    <td>\n                                        <LinkContainer to={`user/${user._id}/edit`}>\n                                            <Button variant=\"light\" className=\"btn-sm\">\n                                                <i className=\"fas fa-edit\"></i>\n                                            </Button>\n                                        </LinkContainer>\n                                        <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(user._id)}>\n                                            <i className=\"fas fa-trash\"></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )}\n        </>\n    )\n}\n\nexport default UserListScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListScreen = ({ history, match }) => {\n    const pageNumber = match.params.pageNumber || 1\n    const dispatch = useDispatch()\n\n    const productList = useSelector((state) => state.productList)\n    const { loading, error, products, page, pages } = productList\n\n    const productDelete = useSelector((state) => state.productDelete)\n    const {\n        loading: loadingDelete,\n        error: errorDelete,\n        success: successDelete\n    } = productDelete\n\n    const productCreate = useSelector((state) => state.productCreate)\n    const {\n        loading: loadingCreate,\n        error: errorCreate,\n        success: successCreate,\n        product: createdProduct\n    } = productCreate\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo || !userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts('', pageNumber))\n        }\n    }, [\n        dispatch,\n        history,\n        userInfo,\n        successDelete,\n        successCreate,\n        createdProduct,\n        pageNumber\n    ])\n\n    const deleteHandler = (id) => {\n        if (window.confirm(`Please confirm if you want to delete ${id}`)) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n    return (\n        <>\n            <Row className=\"align-items-center\">\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n                <Col className=\"text-right\">\n                    <Button className=\"my-3\" onClick={createProductHandler}>\n                        <i className=\"fas fa-plus\"></i>Create Product\n                </Button>\n                </Col>\n            </Row>\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">\n                {error}\n            </Message> : (\n                    <>\n                        <Table striped bordered hover responsive className=\"table-sm\">\n                            <thead>\n                                <tr>\n                                    <td>ID</td>\n                                    <td>NAME</td>\n                                    <td>PRICE</td>\n                                    <td>CATEGORY</td>\n                                    <td>BRAND</td>\n                                    <td></td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {products.map((product) => (\n                                    <tr key={product._id}>\n                                        <td>{product._id}</td>\n                                        <td>{product.name}</td>\n                                        <td>\n                                            €{product.price}\n                                        </td>\n                                        <td>\n                                            {product.category}\n                                        </td>\n                                        <td>\n                                            {product.brand}\n                                        </td>\n                                        <td>\n                                            <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                <Button variant=\"light\" className=\"btn-sm\">\n                                                    <i className=\"fas fa-edit\"></i>\n                                                </Button>\n                                            </LinkContainer>\n                                            <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(product._id)}>\n                                                <i className=\"fas fa-trash\"></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                        <Paginate pages={pages} page={page} isAdmin={true} />\n                    </>\n                )}\n        </>\n    )\n}\n\nexport default ProductListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n    const userId = match.params.id\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { loading, error, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({\n                type: USER_UPDATE_RESET\n            })\n            history.push('/admin/userlist')\n        } else {\n            if (!user.name || user._id !== userId) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [dispatch, userId, user, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n    }\n\n    return (\n        <>\n            <Link to='/admin/userlist' className=' btn btn-light my-3'>\n                Back\n        </Link>\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                    <Form onSubmit={submitHandler}>\n\n                        <Form.Group controlId=\"name\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type=\"name\"\n                                placeholder=\"Your Name\"\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"email\">\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                placeholder=\"yourname@domain.com\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"isadmin\">\n                            <Form.Label>Is Admin?</Form.Label>\n                            <Form.Check\n                                type=\"checkbox\"\n                                labek=\"Is Admin\"\n                                checked={isAdmin}\n                                onChange={(e) => setIsAdmin(e.target.checked)}\n                            >\n                            </Form.Check>\n                        </Form.Group>\n\n                        <Button type=\"submit\" variant=\"primary\">\n                            Edit\n                                </Button>\n                    </Form>\n                )}\n            </FormContainer>\n        </>\n    )\n}\n\nexport default UserEditScreen\n","import axios from 'axios'\n\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\n\nconst ProductEditScreen = ({ match, history }) => {\n    const productId = match.params.id\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n            if (!product.name || product._id !== productId) {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                setBrand(product.brand)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n            }\n        }\n\n\n    }, [dispatch, history, productId, product, successUpdate])\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n        formData.append('image', file)\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    \"Content-Type\": 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/upload', formData, config)\n\n            setImage(data)\n            setUploading(false)\n        } catch (error) {\n            console.error(error)\n            setUploading(false)\n        }\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProduct({\n            _id: productId,\n            name,\n            price,\n            image,\n            brand,\n            category,\n            countInStock,\n            description\n        }))\n    }\n\n    return (\n        <>\n            <Link to='/admin/productlist' className=' btn btn-light my-3'>\n                Back\n        </Link>\n            <FormContainer>\n                <h1>Edit Product</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                    <Form onSubmit={submitHandler}>\n\n                        <Form.Group controlId=\"name\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type=\"name\"\n                                placeholder=\"Your Name\"\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"price\">\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                placeholder=\"yourname@domain.com\"\n                                value={price}\n                                onChange={(e) => setPrice(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"image\">\n                            <Form.Label>Image</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Image URL\"\n                                value={image}\n                                onChange={(e) => setImage(e.target.value)}\n                            >\n                            </Form.Control>\n                            <Form.File\n                                id=\"image-file\"\n                                label=\"Choose File\"\n                                custom\n                                onChange={uploadFileHandler}>\n                            </Form.File>\n                            {uploading && <Loader />}\n                        </Form.Group>\n\n                        <Form.Group controlId=\"brand\">\n                            <Form.Label>Brand</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Brand\"\n                                value={brand}\n                                onChange={(e) => setBrand(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"countInStock\">\n                            <Form.Label>Stock</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                placeholder=\"Stock\"\n                                value={countInStock}\n                                onChange={(e) => setCountInStock(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"category\">\n                            <Form.Label>Category</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Category\"\n                                value={category}\n                                onChange={(e) => setCategory(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"description\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"description\"\n                                value={description}\n                                onChange={(e) => setDescription(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button type=\"submit\" variant=\"primary\">\n                            Edit\n                                </Button>\n                    </Form>\n                )}\n            </FormContainer>\n        </>\n    )\n}\n\nexport default ProductEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\n\nconst OrderListScreen = ({ history }) => {\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n    }, [dispatch, history, userInfo])\n\n    return (\n        <>\n            <h1>Orders</h1>\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">\n                {error}\n            </Message> : (\n                    <Table striped bordered hover responsive className=\"table-sm\">\n                        <thead>\n                            <tr>\n                                <td>ID</td>\n                                <td>USER</td>\n                                <td>DATE</td>\n                                <td>TOTAL PRICE</td>\n                                <td>PAID</td>\n                                <td>DELIVERED</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.map(order => (\n                                <tr key={order._id}>\n                                    <td>{order._id}</td>\n                                    <td>{order.user && order.user.name}</td>\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    <td>€{order.totalPrice}</td>\n                                    <td>\n                                        {order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                                            )}\n                                    </td>\n                                    <td>\n                                        {order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                                            )}\n                                    </td>\n                                    <td>\n                                        <LinkContainer to={`/order/${order._id}`}>\n                                            <Button variant=\"light\" className=\"btn-sm\">\n                                                Details\n                                            </Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )}\n        </>\n    )\n}\n\nexport default OrderListScreen\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header';\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\n\nconst App = () => {\n  return (\n    <Router>\n      <Header></Header>\n      <main className=\"py-4\" >\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/productlist' component={ProductListScreen} exact />\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer></Footer>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store'\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}